reflection

You can reflect for 2^2^14 replicanti.

You get one reflection, and x2 reflection points for each extra order of 2^2^14.
You can buy, with reflection points, mirror power and replicanti galaxies.
number of mirrors = mirror power + floor((percent / 100 + 1) ** mirrors) - 1
effect of mirrors: replication number is multiplied by mirrors + 1
effect of replicanti galaxies: increase in replicanti is raised to a power,
as if it happened (replicanti galaxies + 1) times.

mirror power prices: however much you get for resetting with
f(n) = int((n + 1) * (16 + n / 20))
softness. That is, 2^(int((f(n) / 16)^2) - 1), starting with n = 0.
(Yes, both int calls are intensional. It's redundant, but it makes life easier.)

Replicanti galaxy prices: 16^(n^2) RP, starting with n = 1.

Milestones:
1: chance autobuyer
2: cap autobuyer
3: start with 100% replication chance
4: replication number autobuyer
6: start with infinite cap
8: softness autobuyer
12: start with 256 replication number
16: reset autobuyer
24: start with 16 softnesss
32: reflection autobuyer

Also, there are three miscellaneous upgrades:

Replication number multiplied by reflections: 256 RP
Replication number multiplied by log2(RP): 2^16 RP
Replication number multiplied by mirror power (not mirrors): 2^32 RP

These might make it worthwhile to get 2 mirrors at once. If so, great!
However, it's very unlikely that that will happen early.

You can overflow for 2^2^14 reflection points.

You get one overflow, and x2 overflow points for each extra order of 2^2^14.

cap dimensions, cap power, cap upgrades

each cap dimension produces the previous each second,
and first cap dimension produces cap power

cap dimension costs (there are five of them): 1, 16, 256, 2^16, 2^32.
Price x2 each time you buy, but power also x2 (except first time).
So first cap dimension starts out as 1x, and remains so when you buy your first,
but when you buy one for 2 OP it becomes 2x, etc.

These prices might seem high, but:
1, 16, 256 have been there forever, and thus are expected to be fine.
After a few days (I don't know exactly) and 10 overflows,
one can get fourth cap dimension.
With the same requirements, one can get fifth cap dimension.
The key thing for fifth cap dimension is, of course, the last overflow upgrade.
You can get up to between 1e16 OP and 1e26 OP, based on whether you have 10 or 200 overflows.
(Overflows are super-strong.)

each cap upgrade doubles, not the current cap, but the maximum buyable cap.

how to calculate number of cap upgrades from cap power:

def cap_upgrades(cap_power):
    req = 1
    res = 0
    mult = 1.5
    while req <= cap_power:
        res += 1
        req *= mult
        if req > 2 ** 64:
            mult *= 257 / 256
    return res

Overflow upgrades:
All reflection upgrades are squared: 4 OP.
You keep reflections (but not reflection points) on overflow: 8 OP.
First cap dimension is multiplied by log2(log2(replicanti)): 16 OP.
Second cap dimension is multiplied by log2(log2(RP)): 32 OP.
Mirror autobuyer: 64 OP.
Replicanti galaxies are twice as powerful: 128 OP.
Cap dimension multipliers are multiplied by overflows: 256 OP.
Replicanti galaxy autobuyer: 1024 OP.
Each cap limit double gives a free replicanti galaxy: 4096 OP.
Miscellaneous reflection upgrade autobuyer: 2^14 OP.
Overflow autobuyer: 2^16 OP.
Cap dimension multipliers are multiplied by log2(cap power): 2^24 OP.

Organization:

There are the following tabs:

Replicanti

Reflection purchases

Reflection milestones

Autobuyers

Overflow upgrades

Cap dimensions

Stats

Replicanti tab is as it is now, plus reflect and overflow buttons.

Reflection purchases tab shows basic reflection stats
(reflections, reflection points, mirror power, mirrors, replicanti galaxies)
and has purchase buttons.

Reflection milestones tabs shows reflections and shows unlocked milestones,
which can be turned on or off.
Turning an autobuyer off is the same as doing it in the autobuyer tab.
There are also "Turn all on" and "Turn all off" buttons.

Autobuyers are generally what you might expect.

Overflow upgrades tab shows overflow, overflow points, and purchases.

Cap dimensions tab shows amounts and multipliers of cap dimensions,
in the same way as AD's time dimension tab. It also shows cap upgrades, cost of next, etc.

Stats shows all stats in one place.

Ok, now that we have all this, we can implement and test. None of this is actually that hard.

The hardest part will be programming the bot to be moderately smart.

The plan is first to implement everything in a testable way, and only then
to test and rebalance if needed.
